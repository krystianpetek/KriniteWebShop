version: '3.4'

services:
# KriniteWebShop.ProductCatalog.API
  krinitewebshop.productcatalog.api:
    container_name: KriniteWebShop.ProductCatalog.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:ProductConnection=Server=172.26.100.2,1433;Database=ProductDb;User ID=sa;Password=NotAll0wedForPublic;MultipleActiveResultSets=true;TrustServerCertificate=True
    ports:
      - "5820:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - productdb.mssql

  productdb.mssql:
    container_name: KriniteWebShop.ProductCatalog.API.MsSql
    environment:
      SA_PASSWORD: "NotAll0wedForPublic"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "8720:1433"

# KriniteWebShop.ProductCatalog.NoSQL.API
  krinitewebshop.productcatalog.nosql.api:
    container_name: KriniteWebShop.ProductCatalog.NoSQL.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - DatabaseSettings:ConnectionString=mongodb://172.26.102.2:27017
    ports:
      - "5821:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - productdb.mongo

  productdb.mongo:
    container_name: KriniteWebShop.ProductCatalog.NoSQL.API.Mongo
    restart: always
    ports:
        - "27001:27017"

# KriniteWebShop.ProductCart.API
  krinitewebshop.productcart.api:
    container_name: KriniteWebShop.ProductCart.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - CacheSettings:CartConnection=172.26.104.2:6379
      - GrpcSettings:CouponConnection=http://krinitewebshop.productcoupon.grpc
      - ConnectionStrings:RabbitMqConnection=amqp://guest:guest@172.26.193.1:5672
    ports:
      - "5822:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - cartdb.redis
      - rabbitmq

  cartdb.redis:
    container_name: KriniteWebShop.ProductCart.API.Redis
    restart: always
    ports:
        - "6301:6379"

# KriniteWebShop.ProductCoupon.API
  krinitewebshop.productcoupon.api:
    container_name: KriniteWebShop.ProductCoupon.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:CouponDb=Server=172.26.106.3;Port=5432;Database=coupondb;User Id=postgres;Password=NotAll0wedForPublic
    ports:
      - "5823:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - coupondb.postgresql

  krinitewebshop.productcoupon.grpc:
    container_name: KriniteWebShop.ProductCoupon.gRPC
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:CouponDb=Server=172.26.106.3;Port=5432;Database=coupondb;User Id=postgres;Password=NotAll0wedForPublic
    ports:
      - "5824:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - coupondb.postgresql

  coupondb.postgresql:
    container_name: KriniteWebShop.ProductCoupon.gRPC.PostgreSql
    restart: always
    ports:
        - "5401:5432"
    environment:
      - POSTGRES_PASSWORD=NotAll0wedForPublic

# KriniteWebShop.ProductOrder.API
  krinitewebshop.productorder.api:
    container_name: KriniteWebShop.ProductOrder.API
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:OrderDb=Server=172.26.108.2,1433;Database=Order;User ID=sa;Password=NotAll0wedForPublic;MultipleActiveResultSets=true;TrustServerCertificate=True
      - ConnectionStrings:RabbitMqConnection=amqp://guest:guest@172.26.193.1:5672
    ports:
      - "5825:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      - orderdb.mssql
      - rabbitmq

  orderdb.mssql:
    container_name: KriniteWebShop.ProductOrder.API.MsSql
    environment:
      SA_PASSWORD: "NotAll0wedForPublic"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "8725:1433"

# KriniteWebShop.PurchaseAggregator
  krinitewebshop.purchaseaggregator:
    container_name: KriniteWebShop.PurchaseAggregator
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5826:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
    - krinitewebshop.productcatalog.nosql.api
    - krinitewebshop.productcart.api
    - krinitewebshop.productcoupon.grpc
    - krinitewebshop.productorder.api

# KriniteWebShop.GatewayAPI
  krinitewebshop.gatewayapi:
    container_name: KriniteWebShop.GatewayAPI
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "5827:80"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
    - krinitewebshop.productcatalog.nosql.api
    - krinitewebshop.productcart.api
    - krinitewebshop.productorder.api

# Tools
  portainer:
    container_name: KriniteWebShop.Portainer
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"      
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock 
    - portainer_data:/data portainer/portainer-ce:latest         
  
  mongodbclient:
    container_name: KriniteWebShop.MongoClient
    restart: always
    ports:
        - "3001:3000"

  pgadmin4:
    container_name: KriniteWebShop.pgAdmin4
    restart: always
    ports:
        - "5402:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com 
      - PGADMIN_DEFAULT_PASSWORD=NotAll0wedForPublic
            
  rabbitmq:
    container_name: KriniteWebShop.RabbitMQ
    restart: always
    ports:
    - "5601:5672"
    - "15601:15672"
