@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container">
    <div class="row">
        <div class="col-sm">
            <div class="card-body">
                <div class="row">
                    @foreach (var product in Model.ProductList)
                    {
                        <div class="col-lg-4 col-md-6">
                            <partial name="_ProductItemPartial" model="@product" />
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions{
    public class IndexModel : PageModel
    {
        private readonly ILogger<IndexModel> _logger;
        private readonly IProductService _productService;
        private readonly ICartService _cartService;

        public IEnumerable<ProductModel> ProductList { get; set; } = new List<ProductModel>();
        public string UserName { get; set; } = "Empty User";

        public IndexModel(ILogger<IndexModel> logger, ICartService cartService, IProductService productService)
        {
            _logger = logger;
            _cartService = cartService ?? throw new ArgumentNullException(nameof(cartService));
            _productService = productService ?? throw new ArgumentNullException(nameof(productService));
        }

        public async Task<IActionResult> OnGetAsync()
        {
            ProductList = await _productService.GetProductsAsync();
            return Page();
        }

        public async Task<IActionResult> OnPostAddProductToCartAsync(string productId)
        {
            ProductModel product = await _productService.GetProductById(productId);
				CartModel cart = await _cartService.GetCartAsync(User.Identity.Name ?? UserName);

            CartItemModel newItem = new CartItemModel
                {
                    ProductId = productId,
                    ProductName = product.Name,
                    Price = product.Price,
                    Quantity = 1,
                };
            cart.Items.Add(newItem);

            await _cartService.UpdateCartAsync(cart);

            return RedirectToPage("Cart");
        }
    }
}