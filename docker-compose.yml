version: '3.4'

services:
# KriniteWebShop.ProductCatalog.API
  krinitewebshop.productcatalog.api:
    image: ${DOCKER_REGISTRY-}krinitewebshopproductcatalogapi
    build:
      context: .
      dockerfile: KriniteWebShop.ProductCatalog.API/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.100.1

  productdb.mssql:
    image: mcr.microsoft.com/mssql/server:latest
    networks:
      static-network:
        ipv4_address: 172.26.100.2

# KriniteWebShop.ProductCatalog.NoSQL.API
  krinitewebshop.productcatalog.nosql.api:
    image: ${DOCKER_REGISTRY-}krinitewebshopproductcatalognosqlapi
    build:
      context: .
      dockerfile: KriniteWebShop.ProductCatalog.NoSQL.API/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.102.1
        
  productdb.mongo:
    image: mongo
    networks:
      static-network:
        ipv4_address: 172.26.102.2

# KriniteWebShop.ProductCart.API
  krinitewebshop.productcart.api:
    image: ${DOCKER_REGISTRY-}krinitewebshopproductcartapi
    build:
      context: .
      dockerfile: KriniteWebShop.ProductCart.API/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.104.1
        
  cartdb.redis:
    image: redis
    networks:
      static-network:
        ipv4_address: 172.26.104.2


# KriniteWebShop.ProductCoupon.API
  krinitewebshop.productcoupon.api:
    image: ${DOCKER_REGISTRY-}krinitewebshopproductcouponapi
    build:
      context: .
      dockerfile: KriniteWebShop.ProductCoupon.API/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.106.1
  
  krinitewebshop.productcoupon.grpc:
    image: ${DOCKER_REGISTRY-}krinitewebshopproductcoupongrpc
    build:
      context: .
      dockerfile: KriniteWebShop.ProductCoupon.gRPC/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.106.2
        
  coupondb.postgresql:
    image: postgres
    networks:
      static-network:
        ipv4_address: 172.26.106.3

# KriniteWebShop.ProductOrder.API 
  krinitewebshop.productorder.api:
    image: ${DOCKER_REGISTRY-}krinitewebshopproductorderapi
    build:
      context: .
      dockerfile: KriniteWebShop.ProductOrder.API/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.108.1

  orderdb.mssql:
    image: mcr.microsoft.com/mssql/server:latest
    networks:
      static-network:
        ipv4_address: 172.26.108.2

# KriniteWebShop.PurchaseAggregator
  krinitewebshop.purchaseaggregator:
    image: ${DOCKER_REGISTRY-}krinitewebshoppurchaseaggregator
    build:
      context: .
      dockerfile: KriniteWebShop.PurchaseAggregator/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.110.1

# KriniteWebShop.GatewayAPI
  krinitewebshop.gatewayapi:
    image: ${DOCKER_REGISTRY-}krinitewebshopgatewayapi
    build:
      context: .
      dockerfile: KriniteWebShop.GatewayAPI/Dockerfile
    networks:
      static-network:
        ipv4_address: 172.26.112.1

# Tools
  portainer:
    image: portainer/portainer-ce:latest
    networks:
      static-network:
        ipv4_address: 172.26.190.1

  mongodbclient:
    image: mongoclient/mongoclient
    networks:
      static-network:
        ipv4_address: 172.26.191.1
      
  pgadmin4:
    image: dpage/pgadmin4
    networks:
      static-network:
        ipv4_address: 172.26.192.2

  rabbitmq:
    image: rabbitmq:3-management-alpine
    networks:
      static-network:
        ipv4_address: 172.26.193.1

networks:
  static-network:
    ipam:
      config:
        - subnet: 172.26.0.0/16

volumes:
  portainer_data: